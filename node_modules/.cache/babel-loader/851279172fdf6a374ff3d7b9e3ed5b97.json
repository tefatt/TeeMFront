{"ast":null,"code":"import _classCallCheck from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/teufiktutundzic/Desktop/lang-front/src/Components/EditModal.js\";\nimport React, { Component } from 'react';\nimport { Modal, Icon, Input, InputNumber, Form } from 'antd';\nvar EditForm = Form.create()(function (props) {\n  var text = props.text,\n      time = props.time,\n      form = props.form;\n  var getFieldDecorator = form.getFieldDecorator;\n  var formItemLayout = {\n    labelCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 4\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 20\n      }\n    }\n  };\n  return React.createElement(Form, Object.assign({}, formItemLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, getFieldDecorator(\"editedText\", {\n    initialValue: text,\n    validateTrigger: ['onChange', 'onBlur'],\n    rules: [{\n      required: true,\n      whitespace: true,\n      message: \"The question can't be blank\"\n    }]\n  })(React.createElement(Input, {\n    size: \"large\",\n    style: {\n      width: '60%',\n      marginRight: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, getFieldDecorator(\"editedTime\", {\n    initialValue: time,\n    validateTrigger: ['onChange', 'onBlur'],\n    rules: [{\n      required: true,\n      message: \"The question time can't be blank\"\n    }]\n  })(React.createElement(InputNumber, {\n    min: 0,\n    max: 100,\n    step: 0.01,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))));\n});\n\nvar EditModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditModal, _Component);\n\n  function EditModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      visible: false\n    };\n    _this.formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 12\n        }\n      }\n    };\n\n    _this.saveFormRef = function (form) {\n      _this.form = form;\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleCancel = function (e) {\n      console.log(e);\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.handleEdit = function () {\n      var form = _this.form;\n      console.log(form);\n      form.validateFields(function (err, values) {\n        if (err) {\n          return;\n        }\n\n        _this.props.handleSubmit(values);\n\n        form.resetFields();\n\n        _this.setState({\n          visible: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EditModal, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"edit\",\n        onClick: this.showModal,\n        theme: \"twoTone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        visible: this.state.visible,\n        onOk: this.handleEdit,\n        onCancel: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(EditForm, {\n        ref: this.saveFormRef,\n        text: this.props.text,\n        time: this.props.time,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EditModal;\n}(Component);\n\nexport default EditModal;","map":{"version":3,"sources":["/Users/teufiktutundzic/Desktop/lang-front/src/Components/EditModal.js"],"names":["React","Component","Modal","Icon","Input","InputNumber","Form","EditForm","create","props","text","time","form","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","initialValue","validateTrigger","rules","required","whitespace","message","width","marginRight","EditModal","state","visible","saveFormRef","showModal","setState","handleCancel","e","console","log","handleEdit","validateFields","err","values","handleSubmit","resetFields"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Modal, Icon, Input, InputNumber, Form} from 'antd';\n\n\nconst EditForm = Form.create()(\n    (props) => {\n        const {text, time, form} = props;\n\n        const {getFieldDecorator} = form;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 20},\n            },\n        };\n        return (\n            <Form {...formItemLayout}>\n                <Form.Item>\n                    {getFieldDecorator(`editedText`, {\n                        initialValue: text,\n                        validateTrigger: ['onChange', 'onBlur'],\n                        rules: [\n                            {\n                                required: true,\n                                whitespace: true,\n                                message: \"The question can't be blank\",\n                            },\n                        ],\n                    })(\n                        <Input size=\"large\" style={{width: '60%', marginRight: 8}}/>\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    {getFieldDecorator(`editedTime`, {\n                        initialValue: time,\n                        validateTrigger: ['onChange', 'onBlur'],\n                        rules: [\n                            {\n                                required: true,\n                                message: \"The question time can't be blank\",\n                            },\n                        ],\n                    })(\n                        <InputNumber min={0} max={100} step={0.01}/>\n                    )}\n                </Form.Item>\n            </Form>\n        )\n    })\n\nclass EditModal extends Component {\n    state = {visible: false};\n\n    formItemLayout = {\n        labelCol: {\n            xs: {span: 24},\n            sm: {span: 5},\n        },\n        wrapperCol: {\n            xs: {span: 24},\n            sm: {span: 12},\n        },\n    };\n\n    saveFormRef = (form) => {\n        this.form = form;\n    };\n\n    showModal = () => {\n        this.setState({visible: true});\n\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({visible: false});\n    };\n\n    handleEdit = () => {\n        const form = this.form;\n        console.log(form)\n        form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n        this.props.handleSubmit(values);\n        form.resetFields();\n        this.setState({visible: false});\n        });\n    };\n\n    render() {\n        return (\n            <a>\n                <Icon type=\"edit\" onClick={this.showModal} theme=\"twoTone\"/>\n                <Modal\n                    visible={this.state.visible}\n                    onOk={this.handleEdit}\n                    onCancel={this.handleCancel}>\n                    {/*<InputNumber min={0} max={10} defaultValue={this.props.time} step={0.01}/>*/}\n                    <EditForm ref={this.saveFormRef}\n                              text={this.props.text}\n                              time={this.props.time}\n                    />\n                </Modal>\n            </a>\n        );\n    }\n}\n\nexport default EditModal;"]},"metadata":{},"sourceType":"module"}