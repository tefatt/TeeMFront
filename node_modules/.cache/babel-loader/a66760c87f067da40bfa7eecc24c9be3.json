{"ast":null,"code":"import _objectWithoutProperties from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/teufiktutundzic/Desktop/lang-front/src/Components/InputQuestion.js\";\nimport React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, Modal, Form, Checkbox, Input, Row, Col, Icon } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport uuid from \"uuid\";\nimport { connect } from 'react-redux';\nimport { inputQuestion as _inputQuestion } from '../actions/questionActions';\nvar FormItem = Form.Item;\nvar CollectionCreateForm = Form.create()(function (props) {\n  var visible = props.visible,\n      playedTime = props.playedTime,\n      onCancel = props.onCancel,\n      onCreate = props.onCreate,\n      add = props.add,\n      remove = props.remove,\n      form = props.form;\n  var getFieldDecorator = form.getFieldDecorator,\n      getFieldValue = form.getFieldValue;\n  var formItemLayout = {\n    labelCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 4\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 20\n      }\n    }\n  };\n  var formItemLayoutWithOutLabel = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0\n      },\n      sm: {\n        span: 20,\n        offset: 4\n      }\n    }\n  };\n  getFieldDecorator('keys', {\n    initialValue: []\n  });\n  var keys = getFieldValue('keys');\n  var formItems = keys.map(function (k, index) {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Form.Item, Object.assign({}, index === 0 ? formItemLayout : formItemLayoutWithOutLabel, {\n      label: index === 0 ? 'Answers' : '',\n      required: true,\n      key: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), getFieldDecorator(\"answers[\".concat(k, \"]\"), {\n      validateTrigger: ['onChange', 'onBlur'],\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: \"Please input the text of answer or delete this field.\"\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"Enter your answer here\",\n      style: {\n        width: '60%',\n        marginRight: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), keys.length > 1 ? React.createElement(Icon, {\n      className: \"dynamic-delete-button\",\n      type: \"minus-circle-o\",\n      onClick: function onClick() {\n        return remove(k);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }) : null)), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, getFieldDecorator(\"isCorrect[\".concat(k, \"]\"), {})(React.createElement(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Correct Answer\")))));\n  });\n  var questionTitle = \"Create a new question at: \".concat(playedTime.toFixed(2), \"s\");\n  return React.createElement(Modal, {\n    visible: visible,\n    title: questionTitle,\n    okText: \"Create\",\n    onCancel: onCancel,\n    onOk: onCreate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Form, {\n    layout: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(FormItem, {\n    label: \"Question text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, getFieldDecorator('title', {\n    rules: [{\n      required: true,\n      message: 'Please enter the text of question'\n    }]\n  })(React.createElement(Input, {\n    type: \"textarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))), formItems, React.createElement(Form.Item, Object.assign({}, formItemLayoutWithOutLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"dashed\",\n    onClick: add,\n    style: {\n      width: '60%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    type: \"plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), \" Add answer\"))));\n});\n\nvar InputQuestion =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InputQuestion, _Component);\n\n  function InputQuestion() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InputQuestion);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InputQuestion)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      visible: false,\n      index: 0,\n      playedTime: 0\n    };\n\n    _this.showModal = function () {\n      var playedTime = _this.props.getPlayerTime();\n\n      _this.setState({\n        visible: true,\n        playedTime: playedTime\n      });\n    };\n\n    _this.handleCancel = function () {\n      _this.setState({\n        visible: false,\n        index: 0\n      });\n    };\n\n    _this.handleCreate = function () {\n      var form = _this.form;\n      form.validateFields(function (err, values) {\n        if (err) {\n          return;\n        }\n\n        values[\"answerData\"] = _this._restructureValues(values);\n        values[\"playedTime\"] = _this.state.playedTime;\n        values[\"index\"] = uuid.v4();\n\n        var _ = values[\"keys\"],\n            __ = values[\"answers\"],\n            ___ = values[\"isCorrect\"],\n            questionData = _objectWithoutProperties(values, [\"keys\", \"answers\", \"isCorrect\"]); // dispatch action\n\n\n        _this.props.inputQuestion(questionData);\n\n        form.resetFields();\n\n        _this.setState({\n          visible: false,\n          index: 0,\n          playedTime: 0\n        });\n      });\n    };\n\n    _this.saveFormRef = function (form) {\n      _this.form = form;\n    };\n\n    _this.remove = function (k) {\n      var form = _this.form; // can use data-binding to get\n\n      var keys = form.getFieldValue('keys'); // We need at least one answer\n\n      if (keys.length === 1) {\n        return;\n      } // can use data-binding to set\n\n\n      form.setFieldsValue({\n        keys: keys.filter(function (key) {\n          return key !== k;\n        })\n      });\n    };\n\n    _this.add = function () {\n      var form = _this.form; // can use data-binding to get\n\n      var keys = form.getFieldValue('keys');\n      var nextKeys = keys.concat(_this.state.index++); // can use data-binding to set\n      // important! notify form to detect changes\n\n      form.setFieldsValue({\n        keys: nextKeys\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(InputQuestion, [{\n    key: \"_restructureValues\",\n    value: function _restructureValues(values) {\n      var answers = values.answers.filter(function (el) {\n        return el;\n      });\n      return answers.map(function (value, i) {\n        return {\n          \"answerText\": value,\n          \"isCorrect\": !!values.isCorrect[i],\n          \"key\": i\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Add Question\"), React.createElement(CollectionCreateForm, {\n        ref: this.saveFormRef,\n        playedTime: this.state.playedTime,\n        visible: this.state.visible,\n        onCancel: this.handleCancel,\n        onCreate: this.handleCreate,\n        index: this.state.index,\n        add: this.add,\n        remove: this.remove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return InputQuestion;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    inputQuestion: function inputQuestion(values) {\n      dispatch(_inputQuestion(values));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(InputQuestion);","map":{"version":3,"sources":["/Users/teufiktutundzic/Desktop/lang-front/src/Components/InputQuestion.js"],"names":["React","Component","Button","Modal","Form","Checkbox","Input","Row","Col","Icon","bindActionCreators","uuid","connect","inputQuestion","FormItem","Item","CollectionCreateForm","create","props","visible","playedTime","onCancel","onCreate","add","remove","form","getFieldDecorator","getFieldValue","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","initialValue","keys","formItems","map","k","index","validateTrigger","rules","required","whitespace","message","width","marginRight","length","questionTitle","toFixed","InputQuestion","state","showModal","getPlayerTime","setState","handleCancel","handleCreate","validateFields","err","values","_restructureValues","v4","_","__","___","questionData","resetFields","saveFormRef","setFieldsValue","filter","key","nextKeys","concat","answers","el","value","i","isCorrect","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport 'antd/dist/antd.css';\nimport {Button, Modal, Form, Checkbox, Input, Row, Col, Icon} from 'antd';\nimport {bindActionCreators} from 'redux'\nimport uuid from \"uuid\";\n\nimport {connect} from 'react-redux';\nimport {inputQuestion} from '../actions/questionActions';\n\n\nconst FormItem = Form.Item;\n\nconst CollectionCreateForm = Form.create()(\n    (props) => {\n        const {visible, playedTime, onCancel, onCreate, add, remove, form} = props;\n\n        const {getFieldDecorator, getFieldValue} = form;\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 4},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 20},\n            },\n        };\n        const formItemLayoutWithOutLabel = {\n            wrapperCol: {\n                xs: {span: 24, offset: 0},\n                sm: {span: 20, offset: 4},\n            },\n        };\n        getFieldDecorator('keys', {initialValue: []});\n        const keys = getFieldValue('keys');\n\n        const formItems = keys.map((k, index) => (\n            <Row>\n                <Col>\n                    <Form.Item\n                        {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n                        label={index === 0 ? 'Answers' : ''}\n                        required={true}\n                        key={k}\n                    >\n                        {getFieldDecorator(`answers[${k}]`, {\n                            validateTrigger: ['onChange', 'onBlur'],\n                            rules: [\n                                {\n                                    required: true,\n                                    whitespace: true,\n                                    message: \"Please input the text of answer or delete this field.\",\n                                },\n                            ],\n                        })(<Input placeholder=\"Enter your answer here\" style={{width: '60%', marginRight: 8}}/>)\n                        }\n                        {keys.length > 1 ? (\n                            <Icon\n                                className=\"dynamic-delete-button\"\n                                type=\"minus-circle-o\"\n                                onClick={() => remove(k)}\n                            />\n                        ) : null}\n                    </Form.Item>\n                </Col>\n                <Col>\n                    <Form.Item>\n                        {getFieldDecorator(`isCorrect[${k}]`, {})(<Checkbox>Correct Answer</Checkbox>)}\n                    </Form.Item>\n                </Col>\n            </Row>\n        ));\n        const questionTitle = `Create a new question at: ${playedTime.toFixed(2)}s`;\n        return (\n            <Modal\n                visible={visible}\n                title={questionTitle}\n                okText=\"Create\"\n                onCancel={onCancel}\n                onOk={onCreate}\n            >\n                <Form layout=\"vertical\">\n                    <FormItem label=\"Question text\">\n                        {getFieldDecorator('title', {\n                            rules: [{required: true, message: 'Please enter the text of question'}],\n                        })(\n                            <Input type=\"textarea\"/>\n                        )}\n\n                    </FormItem>\n                    {formItems}\n                    <Form.Item {...formItemLayoutWithOutLabel}>\n                        <Button type=\"dashed\" onClick={add} style={{width: '60%'}}>\n                            <Icon type=\"plus\"/> Add answer\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        );\n    }\n);\n\nclass InputQuestion extends Component {\n    state = {\n        visible: false,\n        index: 0,\n        playedTime: 0\n    };\n\n    _restructureValues(values) {\n        let answers = values.answers.filter(el => el);\n        return answers.map((value, i) => {\n            return {\"answerText\": value, \"isCorrect\": !!values.isCorrect[i], \"key\": i}\n        });\n    }\n\n    showModal = () => {\n        let playedTime = this.props.getPlayerTime();\n        this.setState({visible: true, playedTime});\n    };\n    handleCancel = () => {\n        this.setState({visible: false, index: 0});\n    };\n    handleCreate = () => {\n        const form = this.form;\n        form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n            values[\"answerData\"] = this._restructureValues(values);\n            values[\"playedTime\"] = this.state.playedTime;\n            values[\"index\"] = uuid.v4();\n\n            const {[\"keys\"]: _, [\"answers\"]: __, [\"isCorrect\"]: ___, ...questionData} = values;\n\n            // dispatch action\n            this.props.inputQuestion(questionData);\n            form.resetFields();\n            this.setState({visible: false, index: 0, playedTime: 0});\n        });\n    };\n\n    saveFormRef = (form) => {\n        this.form = form;\n    };\n\n    remove = k => {\n        const form = this.form;\n        // can use data-binding to get\n        const keys = form.getFieldValue('keys');\n        // We need at least one answer\n        if (keys.length === 1) {\n            return;\n        }\n\n        // can use data-binding to set\n        form.setFieldsValue({\n            keys: keys.filter(key => key !== k),\n        });\n    };\n\n    add = () => {\n        const form = this.form;\n        // can use data-binding to get\n        const keys = form.getFieldValue('keys');\n        const nextKeys = keys.concat(this.state.index++);\n        // can use data-binding to set\n        // important! notify form to detect changes\n        form.setFieldsValue({\n            keys: nextKeys,\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showModal}>Add Question</Button>\n                <CollectionCreateForm\n                    ref={this.saveFormRef}\n                    playedTime={this.state.playedTime}\n                    visible={this.state.visible}\n                    onCancel={this.handleCancel}\n                    onCreate={this.handleCreate}\n                    index={this.state.index}\n                    add={this.add}\n                    remove={this.remove}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        inputQuestion: (values) => {\n            dispatch(inputQuestion(values));\n        }\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(InputQuestion);"]},"metadata":{},"sourceType":"module"}