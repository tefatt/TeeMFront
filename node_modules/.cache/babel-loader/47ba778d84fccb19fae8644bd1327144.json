{"ast":null,"code":"import _classCallCheck from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/teufiktutundzic/Desktop/lang-front/src/Components/VideoDetail.js\";\nimport React, { Component } from 'react';\nimport { Icon } from \"antd\";\nimport YTPlayer from \"yt-player\";\nvar player = new YTPlayer('#player', {\n  height: '390',\n  width: '640',\n  videoId: 'M7lc1UVf-VE' // events: {\n  //     'onReady': onPlayerReady,\n  //     'onStateChange': onPlayerStateChange\n  // }\n\n});\n\nvar VideoDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VideoDetail, _Component);\n\n  function VideoDetail(props) {\n    var _this;\n\n    _classCallCheck(this, VideoDetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VideoDetail).call(this, props));\n    _this.state = {\n      video: null,\n      player: null\n    };\n    _this.playerRef = React.createRef();\n    player.load('GKSRyLdjsPA');\n    player.setVolume(100);\n    player.on('playing', function () {\n      console.log(player.getDuration()); // => 351.521\n    });\n    return _this;\n  }\n\n  _createClass(VideoDetail, [{\n    key: \"onYouTubeIframeAPIReady\",\n    value: function onYouTubeIframeAPIReady() {\n      return;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        player: this.onYouTubeIframeAPIReady()\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.video && prevProps.video !== this.props.video) {\n        this.setState({\n          video: this.props.video\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const video = this.state.video;\n      //\n      // if (!video) {\n      //     return (\n      //         <div style={{\n      //             \"width\": \"67.5%\",\n      //             \"background\": \"#999999\",\n      //             \"color\": \"#fff\",\n      //             \"height\": \"85vh\",\n      //             \"postion\": \"relative\"\n      //         }}>\n      //             <h1 style={{\"top\": \"50%\", \"left\": \"28%\", \"position\": \"absolute\"}}><Icon type={\"youtube\"}/></h1>\n      //         </div>\n      //     )\n      // }\n      // const videoId = video.id.videoId;\n      // const url = `https://www.youtube.com/embed/${ videoId }`;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"embed-responsive embed-responsive-16by9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: this.playerRef,\n        id: \"player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return VideoDetail;\n}(Component);\n\nexport default VideoDetail;","map":{"version":3,"sources":["/Users/teufiktutundzic/Desktop/lang-front/src/Components/VideoDetail.js"],"names":["React","Component","Icon","YTPlayer","player","height","width","videoId","VideoDetail","props","state","video","playerRef","createRef","load","setVolume","on","console","log","getDuration","setState","onYouTubeIframeAPIReady","prevProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,IAAMC,MAAM,GAAG,IAAID,QAAJ,CAAa,SAAb,EAAwB;AACnCE,EAAAA,MAAM,EAAE,KAD2B;AAEnCC,EAAAA,KAAK,EAAE,KAF4B;AAGnCC,EAAAA,OAAO,EAAE,aAH0B,CAInC;AACA;AACA;AACA;;AAPmC,CAAxB,CAAf;;IAUMC,W;;;;;AAKF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AADe,UAJnBC,KAImB,GAJX;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJP,MAAAA,MAAM,EAAE;AAFJ,KAIW;AAEf,UAAKQ,SAAL,GAAiBZ,KAAK,CAACa,SAAN,EAAjB;AACAT,IAAAA,MAAM,CAACU,IAAP,CAAY,aAAZ;AACAV,IAAAA,MAAM,CAACW,SAAP,CAAiB,GAAjB;AAEAX,IAAAA,MAAM,CAACY,EAAP,CAAU,SAAV,EAAqB,YAAM;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYd,MAAM,CAACe,WAAP,EAAZ,EADuB,CACW;AACrC,KAFD;AANe;AASlB;;;;8CACyB;AACtB;AACH;;;wCAEmB;AAChB,WAAKC,QAAL,CAAc;AAAChB,QAAAA,MAAM,EAAE,KAAKiB,uBAAL;AAAT,OAAd;AACH;;;uCAEkBC,S,EAAW;AAC1B,UAAI,KAAKb,KAAL,CAAWE,KAAX,IAAsBW,SAAS,CAACX,KAAV,KAAoB,KAAKF,KAAL,CAAWE,KAAzD,EAAiE;AAC7D,aAAKS,QAAL,CAAc;AAACT,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAAnB,SAAd;AACH;AACJ;;;6BAGQ;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE,yCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAE,KAAKC,SAAf;AAA0B,QAAA,EAAE,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ;AAgBH;;;;EAlEqBX,S;;AAqE1B,eAAeO,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Icon} from \"antd\";\nimport YTPlayer from \"yt-player\";\nconst player = new YTPlayer('#player', {\n    height: '390',\n    width: '640',\n    videoId: 'M7lc1UVf-VE',\n    // events: {\n    //     'onReady': onPlayerReady,\n    //     'onStateChange': onPlayerStateChange\n    // }\n});\n\nclass VideoDetail extends Component {\n    state = {\n        video: null,\n        player: null\n    };\n    constructor(props) {\n        super(props);\n        this.playerRef = React.createRef();\n        player.load('GKSRyLdjsPA')\n        player.setVolume(100)\n\n        player.on('playing', () => {\n            console.log(player.getDuration()) // => 351.521\n        })\n    }\n    onYouTubeIframeAPIReady() {\n        return\n    }\n\n    componentDidMount() {\n        this.setState({player: this.onYouTubeIframeAPIReady()})\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.video && ( prevProps.video !== this.props.video)) {\n            this.setState({video: this.props.video});\n        }\n    }\n\n\n    render() {\n        // const video = this.state.video;\n        //\n        // if (!video) {\n        //     return (\n        //         <div style={{\n        //             \"width\": \"67.5%\",\n        //             \"background\": \"#999999\",\n        //             \"color\": \"#fff\",\n        //             \"height\": \"85vh\",\n        //             \"postion\": \"relative\"\n        //         }}>\n        //             <h1 style={{\"top\": \"50%\", \"left\": \"28%\", \"position\": \"absolute\"}}><Icon type={\"youtube\"}/></h1>\n        //         </div>\n        //     )\n        // }\n\n        // const videoId = video.id.videoId;\n        // const url = `https://www.youtube.com/embed/${ videoId }`;\n\n        return (\n            <div>\n                <div className={\"embed-responsive embed-responsive-16by9\"}>\n                    <div ref={this.playerRef} id=\"player\" ></div>\n                    {/*<iframe title={video.snippet.title} className={\"embed-responsive-item\"} src={url} allowFullScreen/>*/}\n                </div>\n                {/*<div>*/}\n                    {/*<h2>*/}\n                        {/*{video.snippet.title}*/}\n                    {/*</h2>*/}\n                    {/*<div>*/}\n                        {/*{video.snippet.description}*/}\n                    {/*</div>*/}\n                {/*</div>*/}\n            </div>\n        )\n    }\n}\n\nexport default VideoDetail;\n\n"]},"metadata":{},"sourceType":"module"}