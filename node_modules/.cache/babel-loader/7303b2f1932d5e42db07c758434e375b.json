{"ast":null,"code":"import _classCallCheck from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/teufiktutundzic/Desktop/lang-front/src/Components/InputQuestion.js\";\nimport { Form, Input, Icon, Button } from 'antd';\nvar id = 0;\n\nvar DynamicFieldSet =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DynamicFieldSet, _React$Component);\n\n  function DynamicFieldSet() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DynamicFieldSet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DynamicFieldSet)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.remove = function (k) {\n      var form = _this.props.form; // can use data-binding to get\n\n      var keys = form.getFieldValue('keys'); // We need at least one passenger\n\n      if (keys.length === 1) {\n        return;\n      } // can use data-binding to set\n\n\n      form.setFieldsValue({\n        keys: keys.filter(function (key) {\n          return key !== k;\n        })\n      });\n    };\n\n    _this.add = function () {\n      var form = _this.props.form; // can use data-binding to get\n\n      var keys = form.getFieldValue('keys');\n      var nextKeys = keys.concat(id++); // can use data-binding to set\n      // important! notify form to detect changes\n\n      form.setFieldsValue({\n        keys: nextKeys\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var keys = values.keys,\n              names = values.names;\n          console.log('Received values of form: ', values);\n          console.log('Merged values:', keys.map(function (key) {\n            return names[key];\n          }));\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DynamicFieldSet, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 4\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 20\n          }\n        }\n      };\n      var formItemLayoutWithOutLabel = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 20,\n            offset: 4\n          }\n        }\n      };\n      getFieldDecorator('keys', {\n        initialValue: []\n      });\n      var keys = getFieldValue('keys');\n      var formItems = keys.map(function (k, index) {\n        return React.createElement(Form.Item, Object.assign({}, index === 0 ? formItemLayout : formItemLayoutWithOutLabel, {\n          label: index === 0 ? 'Passengers' : '',\n          required: false,\n          key: k,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), getFieldDecorator(\"names[\".concat(k, \"]\"), {\n          validateTrigger: ['onChange', 'onBlur'],\n          rules: [{\n            required: true,\n            whitespace: true,\n            message: \"Please input passenger's name or delete this field.\"\n          }]\n        })(React.createElement(Input, {\n          placeholder: \"passenger name\",\n          style: {\n            width: '60%',\n            marginRight: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        })), keys.length > 1 ? React.createElement(Icon, {\n          className: \"dynamic-delete-button\",\n          type: \"minus-circle-o\",\n          onClick: function onClick() {\n            return _this2.remove(k);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }) : null);\n      });\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, formItems, React.createElement(Form.Item, Object.assign({}, formItemLayoutWithOutLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"dashed\",\n        onClick: this.add,\n        style: {\n          width: '60%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), \" Add field\")), React.createElement(Form.Item, Object.assign({}, formItemLayoutWithOutLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return DynamicFieldSet;\n}(React.Component);\n\nexport default DynamicFieldSet; // const WrappedDynamicFieldSet = Form.create({ name: 'dynamic_form_item' })(DynamicFieldSet);\n// ReactDOM.render(<WrappedDynamicFieldSet />, mountNode);","map":{"version":3,"sources":["/Users/teufiktutundzic/Desktop/lang-front/src/Components/InputQuestion.js"],"names":["Form","Input","Icon","Button","id","DynamicFieldSet","remove","k","form","props","keys","getFieldValue","length","setFieldsValue","filter","key","add","nextKeys","concat","handleSubmit","e","preventDefault","validateFields","err","values","names","console","log","map","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","initialValue","formItems","index","validateTrigger","rules","required","whitespace","message","width","marginRight","React","Component"],"mappings":"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","sourcesContent":["import { Form, Input, Icon, Button } from 'antd';\n\nlet id = 0;\n\nclass DynamicFieldSet extends React.Component {\n    remove = k => {\n        const { form } = this.props;\n        // can use data-binding to get\n        const keys = form.getFieldValue('keys');\n        // We need at least one passenger\n        if (keys.length === 1) {\n            return;\n        }\n\n        // can use data-binding to set\n        form.setFieldsValue({\n            keys: keys.filter(key => key !== k),\n        });\n    };\n\n    add = () => {\n        const { form } = this.props;\n        // can use data-binding to get\n        const keys = form.getFieldValue('keys');\n        const nextKeys = keys.concat(id++);\n        // can use data-binding to set\n        // important! notify form to detect changes\n        form.setFieldsValue({\n            keys: nextKeys,\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const { keys, names } = values;\n                console.log('Received values of form: ', values);\n                console.log('Merged values:', keys.map(key => names[key]));\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator, getFieldValue } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 4 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 20 },\n            },\n        };\n        const formItemLayoutWithOutLabel = {\n            wrapperCol: {\n                xs: { span: 24, offset: 0 },\n                sm: { span: 20, offset: 4 },\n            },\n        };\n        getFieldDecorator('keys', { initialValue: [] });\n        const keys = getFieldValue('keys');\n        const formItems = keys.map((k, index) => (\n            <Form.Item\n                {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n                label={index === 0 ? 'Passengers' : ''}\n                required={false}\n                key={k}\n            >\n                {getFieldDecorator(`names[${k}]`, {\n                    validateTrigger: ['onChange', 'onBlur'],\n                    rules: [\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: \"Please input passenger's name or delete this field.\",\n                        },\n                    ],\n                })(<Input placeholder=\"passenger name\" style={{ width: '60%', marginRight: 8 }} />)}\n                {keys.length > 1 ? (\n                    <Icon\n                        className=\"dynamic-delete-button\"\n                        type=\"minus-circle-o\"\n                        onClick={() => this.remove(k)}\n                    />\n                ) : null}\n            </Form.Item>\n        ));\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                {formItems}\n                <Form.Item {...formItemLayoutWithOutLabel}>\n                    <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\n                        <Icon type=\"plus\" /> Add field\n                    </Button>\n                </Form.Item>\n                <Form.Item {...formItemLayoutWithOutLabel}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default DynamicFieldSet;\n\n// const WrappedDynamicFieldSet = Form.create({ name: 'dynamic_form_item' })(DynamicFieldSet);\n// ReactDOM.render(<WrappedDynamicFieldSet />, mountNode);"]},"metadata":{},"sourceType":"module"}