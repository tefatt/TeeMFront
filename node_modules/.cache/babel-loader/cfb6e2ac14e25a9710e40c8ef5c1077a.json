{"ast":null,"code":"import _objectSpread from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar initialState = {\n  inputtedQuestions: []\n};\n\nvar questionReducer = function questionReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"INPUT_QUESTION\":\n      return {\n        inputtedQuestions: [].concat(_toConsumableArray(state.inputtedQuestions), [action.payload])\n      };\n\n    case \"EDIT_QUESTION\":\n      return {\n        inputtedQuestions: state.inputtedQuestions.map(function (item, index) {\n          if (index !== action.index) {\n            return item;\n          }\n\n          return _objectSpread({}, item, action.payload);\n        })\n      };\n\n    case \"DELETE_QUESTION\":\n      return {\n        inputtedQuestions: state.inputtedQuestions.filter(function (item) {\n          return item.index !== action.index;\n        })\n      };\n\n    case \"EDIT_ANSWER\":\n      console.log(action);\n      return {\n        inputtedQuestions: state.inputtedQuestions.map(function (qItem) {\n          if (qItem.index !== action.questionIndex) return qItem;\n          console.log(qItem);\n          qItem.answerData.map(function (aItem, index) {\n            if (index !== action.answerIndex) return aItem;\n            return _objectSpread({}, aItem, action.payload);\n          });\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default questionReducer;","map":{"version":3,"sources":["/Users/teufiktutundzic/Desktop/lang-front/src/reducers/questionReducer.js"],"names":["initialState","inputtedQuestions","questionReducer","state","action","type","payload","map","item","index","filter","console","log","qItem","questionIndex","answerData","aItem","answerIndex"],"mappings":";;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,iBAAiB,EAAE;AADF,CAArB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AACI,aAAO;AACHJ,QAAAA,iBAAiB,+BAAME,KAAK,CAACF,iBAAZ,IAA+BG,MAAM,CAACE,OAAtC;AADd,OAAP;;AAGJ,SAAK,eAAL;AACI,aAAO;AACHL,QAAAA,iBAAiB,EAAEE,KAAK,CAACF,iBAAN,CAAwBM,GAAxB,CAA4B,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChE,cAAIA,KAAK,KAAKL,MAAM,CAACK,KAArB,EAA4B;AACxB,mBAAOD,IAAP;AAAY;;AAChB,mCACOA,IADP,EAEOJ,MAAM,CAACE,OAFd;AAGC,SANkB;AADhB,OAAP;;AAUJ,SAAK,iBAAL;AACI,aAAO;AACHL,QAAAA,iBAAiB,EAAEE,KAAK,CAACF,iBAAN,CAAwBS,MAAxB,CAA+B,UAAAF,IAAI;AAAA,iBAAIA,IAAI,CAACC,KAAL,KAAeL,MAAM,CAACK,KAA1B;AAAA,SAAnC;AADhB,OAAP;;AAGJ,SAAK,aAAL;AACIE,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,aAAO;AACHH,QAAAA,iBAAiB,EAAEE,KAAK,CAACF,iBAAN,CAAwBM,GAAxB,CAA4B,UAAAM,KAAK,EAAI;AACpD,cAAIA,KAAK,CAACJ,KAAN,KAAgBL,MAAM,CAACU,aAA3B,EAA0C,OAAOD,KAAP;AAC1CF,UAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAA,UAAAA,KAAK,CAACE,UAAN,CAAiBR,GAAjB,CAAqB,UAACS,KAAD,EAAQP,KAAR,EAAkB;AACnC,gBAAIA,KAAK,KAAKL,MAAM,CAACa,WAArB,EAAkC,OAAOD,KAAP;AAClC,qCACOA,KADP,EAEOZ,MAAM,CAACE,OAFd;AAGH,WALD;AAMC,SATc;AADhB,OAAP;;AAYJ;AACI,aAAOH,KAAP;AAnCR;AAqCH,CAtCD;;AAwCA,eAAeD,eAAf","sourcesContent":["const initialState = {\n    inputtedQuestions: []\n};\n\nconst questionReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"INPUT_QUESTION\":\n            return {\n                inputtedQuestions: [...state.inputtedQuestions, action.payload]\n            };\n        case \"EDIT_QUESTION\":\n            return {\n                inputtedQuestions: state.inputtedQuestions.map((item, index) => {\n                if (index !== action.index) {\n                    return item}\n                return {\n                    ...item,\n                    ...action.payload}\n                })\n            };\n\n        case \"DELETE_QUESTION\":\n            return {\n                inputtedQuestions: state.inputtedQuestions.filter(item => item.index !== action.index)\n            };\n        case \"EDIT_ANSWER\":\n            console.log(action)\n            return {\n                inputtedQuestions: state.inputtedQuestions.map(qItem => {\n                    if (qItem.index !== action.questionIndex) return qItem;\n                    console.log(qItem);\n                    qItem.answerData.map((aItem, index) => {\n                        if (index !== action.answerIndex) return aItem\n                        return {\n                            ...aItem,\n                            ...action.payload}\n                    })\n                    })\n            };\n        default:\n            return state;\n    }\n};\n\nexport default questionReducer;"]},"metadata":{},"sourceType":"module"}