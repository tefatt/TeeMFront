{"ast":null,"code":"import _regeneratorRuntime from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/teufiktutundzic/Desktop/lang-front/src/Components/Search.js\";\nimport React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport YTSearch from 'youtube-api-search';\nimport { Icon, notification } from 'antd';\nvar API_KEY = \"AIzaSyBIrrOQZ45NhLJX9UN8klnNrhyrlYX3QAk\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.handleInput = function (value) {\n      if (value === '') {\n        return;\n      }\n\n      console.log(_this.props);\n\n      _this.videoSearch(value);\n\n      console.log(_this.state);\n\n      _this.props.getData(_this.state);\n    };\n\n    _this.state = {\n      videos: [],\n      selectedVideo: {}\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"videoSearch\",\n    value: function videoSearch(term) {\n      var _this2 = this;\n\n      YTSearch({\n        key: API_KEY,\n        term: term,\n        part: \"contentDetails\"\n      },\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(data) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n\n                  if (!(data && data.data && data.data.error.message)) {\n                    _context.next = 3;\n                    break;\n                  }\n\n                  throw 'error';\n\n                case 3:\n                  console.log(data);\n\n                  _this2.setState({\n                    videos: data,\n                    selectedVideo: data[0]\n                  });\n\n                  _context.next = 10;\n                  break;\n\n                case 7:\n                  _context.prev = 7;\n                  _context.t0 = _context[\"catch\"](0);\n                  notification['error']({\n                    message: \"Daily Limit Exceeded\",\n                    description: \"Youtube data API daily limit have exceeded. Quota will be recharged at 1:30pm IST. Wait till then.\"\n                  });\n\n                case 10:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 7]]);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          \"display\": \"flex\",\n          \"flexDirection\": \"row\",\n          \"alignItems\": \"center\",\n          \"background\": \"#123456\",\n          \"paddingLeft\": \"30px\",\n          \"paddingRight\": \"30px\",\n          \"justifyContent\": \"space-between\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          \"color\": \"#fff\",\n          \"paddingTop\": \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Search \", React.createElement(Icon, {\n        type: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(SearchBar, {\n        onInput: this.handleInput,\n        style: {\n          \"width\": \"35%\",\n          \"display\": \"inline-flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/teufiktutundzic/Desktop/lang-front/src/Components/Search.js"],"names":["React","Component","SearchBar","YTSearch","Icon","notification","API_KEY","Search","props","handleInput","value","console","log","videoSearch","state","getData","videos","selectedVideo","term","key","part","data","error","message","setState","description"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAAQC,IAAR,EAAcC,YAAd,QAAiC,MAAjC;AAGA,IAAMC,OAAO,GAAG,yCAAhB;;IAEMC,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;;AADe,UAwBnBC,WAxBmB,GAwBL,UAACC,KAAD,EAAW;AACrB,UAAIA,KAAK,KAAK,EAAd,EAAkB;AACd;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKJ,KAAjB;;AACA,YAAKK,WAAL,CAAiBH,KAAjB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKE,KAAjB;;AACA,YAAKN,KAAL,CAAWO,OAAX,CAAmB,MAAKD,KAAxB;AACH,KAhCkB;;AAEf,UAAKA,KAAL,GAAa;AACTE,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,aAAa,EAAE;AAFN,KAAb;AAFe;AAMlB;;;;gCACWC,I,EAAM;AAAA;;AACdf,MAAAA,QAAQ,CAAC;AAACgB,QAAAA,GAAG,EAAEb,OAAN;AAAeY,QAAAA,IAAI,EAAJA,IAAf;AAAqBE,QAAAA,IAAI,EAAE;AAA3B,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA+C,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,wBAE3CA,IAAI,IAAIA,IAAI,CAACA,IAAb,IAAqBA,IAAI,CAACA,IAAL,CAAUC,KAAV,CAAgBC,OAFM;AAAA;AAAA;AAAA;;AAAA,wBAGpC,OAHoC;;AAAA;AAK/CZ,kBAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;;AACA,kBAAA,MAAI,CAACG,QAAL,CAAc;AAACR,oBAAAA,MAAM,EAAEK,IAAT;AAAeJ,oBAAAA,aAAa,EAAEI,IAAI,CAAC,CAAD;AAAlC,mBAAd;;AAN+C;AAAA;;AAAA;AAAA;AAAA;AAQ/ChB,kBAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsB;AAClBkB,oBAAAA,OAAO,EAAE,sBADS;AAElBE,oBAAAA,WAAW,EAAE;AAFK,mBAAtB;;AAR+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/C;;AAAA;AAAA;AAAA;AAAA,UAAR;AAcH;;;6BAYQ;AACL,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAE;AACR,qBAAW,MADH;AAER,2BAAiB,KAFT;AAGR,wBAAc,QAHN;AAIR,wBAAc,SAJN;AAKR,yBAAe,MALP;AAMR,0BAAgB,MANR;AAOR,4BAAkB;AAPV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASI;AAAI,QAAA,KAAK,EAAE;AACP,mBAAS,MADF;AAEP,wBAAc;AAFP,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGU,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHV,CATJ,EAaI,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKhB,WAAzB;AACW,QAAA,KAAK,EAAE;AACH,mBAAS,KADN;AAEH,qBAAW;AAFR,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,CADJ,CADJ;AAwBH;;;;EA5DgBR,S;;AA+DrB,eAAeM,MAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport SearchBar from './SearchBar';\nimport YTSearch from 'youtube-api-search';\nimport {Icon, notification} from 'antd';\n\n\nconst API_KEY = \"AIzaSyBIrrOQZ45NhLJX9UN8klnNrhyrlYX3QAk\";\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            videos: [],\n            selectedVideo: {},\n        };\n    }\n    videoSearch(term) {\n        YTSearch({key: API_KEY, term, part: \"contentDetails\"}, async data => {\n            try {\n                if (data && data.data && data.data.error.message) {\n                    throw ('error')\n                }\n                console.log(data)\n                this.setState({videos: data, selectedVideo: data[0]});\n            } catch (err) {\n                notification['error']({\n                    message: \"Daily Limit Exceeded\",\n                    description: \"Youtube data API daily limit have exceeded. Quota will be recharged at 1:30pm IST. Wait till then.\",\n                })\n            }\n        });\n    }\n\n    handleInput = (value) => {\n        if (value === '') {\n            return;\n        }\n        console.log(this.props)\n        this.videoSearch(value);\n        console.log(this.state)\n        this.props.getData(this.state)\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{\n                    \"display\": \"flex\",\n                    \"flexDirection\": \"row\",\n                    \"alignItems\": \"center\",\n                    \"background\": \"#123456\",\n                    \"paddingLeft\": \"30px\",\n                    \"paddingRight\": \"30px\",\n                    \"justifyContent\": \"space-between\",\n                }}>\n                    <h1 style={{\n                        \"color\": \"#fff\",\n                        \"paddingTop\": \"20px\",\n                    }}>Search <Icon type={\"search\"}/></h1>\n                    <SearchBar onInput={this.handleInput}\n                               style={{\n                                   \"width\": \"35%\",\n                                   \"display\": \"inline-flex\",\n                               }}\n                    />\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}