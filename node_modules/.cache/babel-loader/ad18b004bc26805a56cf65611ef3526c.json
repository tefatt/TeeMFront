{"ast":null,"code":"import _classCallCheck from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/teufiktutundzic/Desktop/lang-front/src/Components/PresentedQuestions.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Collapse, Table } from 'antd';\nvar Panel = Collapse.Panel;\n\nvar PresentedQuestions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PresentedQuestions, _Component);\n\n  function PresentedQuestions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PresentedQuestions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PresentedQuestions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.columns = [{\n      title: 'Answer',\n      dataIndex: 'answer',\n      key: 'answerText',\n      render: function render(text) {\n        return React.createElement(\"a\", {\n          href: \"javascript:;\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, text);\n      }\n    }, {\n      title: 'Correct answer',\n      dataIndex: 'isCorrect',\n      key: 'correctness'\n    }];\n    return _this;\n  }\n\n  _createClass(PresentedQuestions, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.questions.inputtedQuestions);\n      var presentedQuestions = this.props.questions.inputtedQuestions.map(function (questionItem) {\n        return React.createElement(Collapse, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(Panel, {\n          header: \"\".concat(questionItem.title, \" at \").concat(questionItem.playedTime.toFixed(2)),\n          key: questionItem.playedTime,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, questionItem.answerData.map(function (answer) {\n          return React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, answer.answerText);\n        })));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Created questions\"), presentedQuestions);\n    }\n  }]);\n\n  return PresentedQuestions;\n}(Component);\n\nPresentedQuestions.propTypes = {\n  questions: PropTypes.object.isRequired\n}; // const mapStateToProps = (state) => ({\n//     questions: state.inputtedQuestions\n// });\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    questions: state.questions\n  };\n};\n\nexport default connect(mapStateToProps, null)(PresentedQuestions);","map":{"version":3,"sources":["/Users/teufiktutundzic/Desktop/lang-front/src/Components/PresentedQuestions.js"],"names":["React","Component","PropTypes","connect","Collapse","Table","Panel","PresentedQuestions","columns","title","dataIndex","key","render","text","console","log","props","questions","inputtedQuestions","presentedQuestions","map","questionItem","playedTime","toFixed","answerData","answer","answerText","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,QAAR,EAAkBC,KAAlB,QAA8B,MAA9B;IAEOC,K,GAASF,Q,CAATE,K;;IAEDC,kB;;;;;;;;;;;;;;;;;UAGFC,O,GAAU,CACN;AACIC,MAAAA,KAAK,EAAE,QADX;AAEIC,MAAAA,SAAS,EAAE,QAFf;AAGIC,MAAAA,GAAG,EAAE,YAHT;AAIIC,MAAAA,MAAM,EAAE,gBAAAC,IAAI;AAAA,eAAI;AAAG,UAAA,IAAI,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwBA,IAAxB,CAAJ;AAAA;AAJhB,KADM,EAON;AACIJ,MAAAA,KAAK,EAAE,gBADX;AAEIC,MAAAA,SAAS,EAAE,WAFf;AAGIC,MAAAA,GAAG,EAAE;AAHT,KAPM,C;;;;;;6BAcD;AACLG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,iBAAjC;AACA,UAAMC,kBAAkB,GAAG,KAAKH,KAAL,CAAWC,SAAX,CAAqBC,iBAArB,CAAuCE,GAAvC,CAA2C,UAAAC,YAAY;AAAA,eAC9E,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AAAO,UAAA,MAAM,YAAKA,YAAY,CAACZ,KAAlB,iBAA8BY,YAAY,CAACC,UAAb,CAAwBC,OAAxB,CAAgC,CAAhC,CAA9B,CAAb;AAAiF,UAAA,GAAG,EAAEF,YAAY,CAACC,UAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEQD,YAAY,CAACG,UAAb,CAAwBJ,GAAxB,CAA4B,UAAAK,MAAM;AAAA,iBAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIA,MAAM,CAACC,UAAX,CADkC;AAAA,SAAlC,CAFR,CADJ,CAD8E;AAAA,OAAvD,CAA3B;AAWA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEKP,kBAFL,CADJ;AAMH;;;;EApC4BlB,S;;AAuCjCM,kBAAkB,CAACoB,SAAnB,GAA+B;AAC3BV,EAAAA,SAAS,EAAEf,SAAS,CAAC0B,MAAV,CAAiBC;AADD,CAA/B,C,CAIA;AACA;AACA;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHd,IAAAA,SAAS,EAAEc,KAAK,CAACd;AADd,GAAP;AAGH,CAJD;;AAMA,eAAed,OAAO,CAAC2B,eAAD,EAAkB,IAAlB,CAAP,CAA+BvB,kBAA/B,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {Collapse, Table} from 'antd';\n\nconst {Panel} = Collapse;\n\nclass PresentedQuestions extends Component {\n\n    const\n    columns = [\n        {\n            title: 'Answer',\n            dataIndex: 'answer',\n            key: 'answerText',\n            render: text => <a href=\"javascript:;\">{text}</a>,\n        },\n        {\n            title: 'Correct answer',\n            dataIndex: 'isCorrect',\n            key: 'correctness',\n        }\n    ];\n\n    render() {\n        console.log(this.props.questions.inputtedQuestions);\n        const presentedQuestions = this.props.questions.inputtedQuestions.map(questionItem => (\n            <Collapse>\n                <Panel header={`${questionItem.title} at ${questionItem.playedTime.toFixed(2)}`} key={questionItem.playedTime}>\n                    {\n                        questionItem.answerData.map(answer =>\n                        <p>{answer.answerText}</p>\n                            \n                        )}\n                </Panel>\n            </Collapse>\n        ));\n        return (\n            <div>\n                <h3>Created questions</h3>\n                {presentedQuestions}\n            </div>\n        );\n    }\n}\n\nPresentedQuestions.propTypes = {\n    questions: PropTypes.object.isRequired\n};\n\n// const mapStateToProps = (state) => ({\n//     questions: state.inputtedQuestions\n// });\n\nconst mapStateToProps = (state) => {\n    return {\n        questions: state.questions\n    };\n};\n\nexport default connect(mapStateToProps, null)(PresentedQuestions);"]},"metadata":{},"sourceType":"module"}