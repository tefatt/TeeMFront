{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _autobindDecorator = _interopRequireDefault(require(\"autobind-decorator\"));\n\nvar _constants = require(\"../constants.js\");\n\nvar _utils = require(\"../utils.js\");\n\nvar _class;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nvar oneOfType = _propTypes.default.oneOfType,\n    shape = _propTypes.default.shape,\n    func = _propTypes.default.func,\n    number = _propTypes.default.number,\n    oneOf = _propTypes.default.oneOf,\n    object = _propTypes.default.object,\n    string = _propTypes.default.string;\n/**\n * An invisible overlay that acts as a range mouse control\n * within a specified bounds.\n */\n\nvar RangeControlOverlay = (_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RangeControlOverlay, _Component);\n\n  function RangeControlOverlay(props) {\n    var _this;\n\n    _classCallCheck(this, RangeControlOverlay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RangeControlOverlay).call(this, props));\n    _this.state = {\n      isDragging: false\n    };\n    return _this;\n  }\n\n  _createClass(RangeControlOverlay, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.endDrag();\n    }\n  }, {\n    key: \"startDrag\",\n    value: function startDrag(evt) {\n      this.setState({\n        isDragging: true\n      });\n      window.addEventListener('mousemove', this.triggerRangeChange);\n      window.addEventListener('mouseup', this.endDrag);\n      this.toggleSelection('none');\n      var startValue = evt ? this.getValueFromMouseEvent(evt) : null;\n      this.props.onChangeStart(startValue);\n    }\n  }, {\n    key: \"endDrag\",\n    value: function endDrag(evt) {\n      if (evt) {\n        this.triggerRangeChange(evt);\n      }\n\n      this.setState({\n        isDragging: false\n      });\n      window.removeEventListener('mousemove', this.triggerRangeChange);\n      window.removeEventListener('mouseup', this.endDrag);\n      this.toggleSelection('');\n      var endValue = evt ? this.getValueFromMouseEvent(evt) : null;\n      this.props.onChangeEnd(endValue);\n    }\n  }, {\n    key: \"toggleSelection\",\n    value: function toggleSelection(value) {\n      var body = document.getElementsByTagName('body')[0];\n      body.style['user-select'] = value;\n      body.style['-webkit-user-select'] = value;\n      body.style['-moz-user-select'] = value;\n      body.style['-ms-user-select'] = value;\n    }\n  }, {\n    key: \"getValueFromMouseEvent\",\n    value: function getValueFromMouseEvent(mouseEvent) {\n      return this.props.direction === _constants.Direction.VERTICAL ? this.getVerticalValue(mouseEvent.pageY) : this.getHorizontalValue(mouseEvent.pageX);\n    }\n  }, {\n    key: \"triggerRangeChange\",\n    value: function triggerRangeChange(mouseEvent) {\n      this.props.onChange(this.getValueFromMouseEvent(mouseEvent));\n    }\n  }, {\n    key: \"handleIntentStart\",\n    value: function handleIntentStart(evt) {\n      var _this$props = this.props,\n          direction = _this$props.direction,\n          onIntentStart = _this$props.onIntentStart;\n\n      if (!this.state.isDragging) {\n        var value = direction === _constants.Direction.VERTICAL ? this.getVerticalValue(evt.pageY) : this.getHorizontalValue(evt.pageX);\n        onIntentStart(value);\n      }\n    }\n  }, {\n    key: \"handleIntentMove\",\n    value: function handleIntentMove(evt) {\n      var _this$props2 = this.props,\n          direction = _this$props2.direction,\n          onIntent = _this$props2.onIntent;\n\n      if (!this.state.isDragging) {\n        var value = direction === _constants.Direction.VERTICAL ? this.getVerticalValue(evt.pageY) : this.getHorizontalValue(evt.pageX);\n        onIntent(value);\n      }\n    }\n  }, {\n    key: \"handleIntentEnd\",\n    value: function handleIntentEnd(evt) {\n      var onIntentEnd = this.props.onIntentEnd;\n\n      if (!this.state.isDragging) {\n        onIntentEnd();\n      }\n    }\n  }, {\n    key: \"getRectFromBounds\",\n    value: function getRectFromBounds() {\n      var bounds = this.props.bounds;\n      return typeof bounds === 'function' ? bounds() : bounds;\n    }\n  }, {\n    key: \"getHorizontalValue\",\n    value: function getHorizontalValue(mouseX) {\n      var rect = this.getRectFromBounds();\n      var scrollX = window.pageXOffset !== undefined ? window.pageXOffset : (document.documentElement || document.body.parentNode || document.body).scrollLeft;\n      var dLeft = mouseX - (rect.left + scrollX);\n      dLeft = Math.max(dLeft, 0);\n      dLeft = Math.min(dLeft, rect.width);\n      return dLeft / rect.width;\n    }\n  }, {\n    key: \"getVerticalValue\",\n    value: function getVerticalValue(mouseY) {\n      var rect = this.getRectFromBounds();\n      var scrollY = window.pageYOffset !== undefined ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n      var dTop = mouseY - (rect.top + scrollY);\n      dTop = Math.max(dTop, 0);\n      dTop = Math.min(dTop, rect.height);\n      return 1 - dTop / rect.height;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          style = _this$props3.style;\n      return _react.default.createElement(\"div\", {\n        className: className,\n        style: style,\n        onMouseDown: this.startDrag,\n        onMouseEnter: this.handleIntentStart,\n        onMouseMove: this.handleIntentMove,\n        onMouseLeave: this.handleIntentEnd\n      });\n    }\n  }]);\n\n  return RangeControlOverlay;\n}(_react.Component), (_applyDecoratedDescriptor(_class.prototype, \"startDrag\", [_autobindDecorator.default], Object.getOwnPropertyDescriptor(_class.prototype, \"startDrag\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"endDrag\", [_autobindDecorator.default], Object.getOwnPropertyDescriptor(_class.prototype, \"endDrag\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"triggerRangeChange\", [_autobindDecorator.default], Object.getOwnPropertyDescriptor(_class.prototype, \"triggerRangeChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"handleIntentStart\", [_autobindDecorator.default], Object.getOwnPropertyDescriptor(_class.prototype, \"handleIntentStart\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"handleIntentMove\", [_autobindDecorator.default], Object.getOwnPropertyDescriptor(_class.prototype, \"handleIntentMove\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"handleIntentEnd\", [_autobindDecorator.default], Object.getOwnPropertyDescriptor(_class.prototype, \"handleIntentEnd\"), _class.prototype)), _class);\nRangeControlOverlay.propTypes = {\n  bounds: oneOfType([func, shape({\n    width: number.isRequired,\n    left: number.isRequired\n  }), shape({\n    height: number.isRequired,\n    top: number.isRequired\n  })]).isRequired,\n  onChange: func.isRequired,\n  onChangeStart: func,\n  onChangeEnd: func,\n  onIntent: func,\n  onIntentStart: func,\n  onIntentEnd: func,\n  direction: oneOf([_constants.Direction.HORIZONTAL, _constants.Direction.VERTICAL]),\n  className: string,\n  style: object\n};\nRangeControlOverlay.defaultProps = {\n  onChangeStart: _utils.noop,\n  onChangeEnd: _utils.noop,\n  onIntent: _utils.noop,\n  onIntentStart: _utils.noop,\n  onIntentEnd: _utils.noop,\n  direction: _constants.Direction.HORIZONTAL,\n  className: null,\n  style: {}\n};\nvar _default = RangeControlOverlay;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}