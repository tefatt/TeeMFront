{"ast":null,"code":"import _classCallCheck from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/teufiktutundzic/Desktop/lang-front/src/Components/VideoDetail.js\";\nimport React, { Component } from 'react';\nimport { Icon } from \"antd\";\nimport YTPlayer from \"yt-player\";\n\nvar VideoDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VideoDetail, _Component);\n\n  function VideoDetail(props) {\n    var _this;\n\n    _classCallCheck(this, VideoDetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VideoDetail).call(this, props));\n    _this.state = {\n      video: null,\n      player: null\n    };\n    _this.player = React.createRef();\n    return _this;\n  }\n\n  _createClass(VideoDetail, [{\n    key: \"onYouTubeIframeAPIReady\",\n    value: function onYouTubeIframeAPIReady() {\n      var YTPlayer = require('yt-player');\n\n      return new YTPlayer(this.player, {\n        height: '390',\n        width: '640',\n        videoId: 'M7lc1UVf-VE' // events: {\n        //     'onReady': onPlayerReady,\n        //     'onStateChange': onPlayerStateChange\n        // }\n\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        player: this.onYouTubeIframeAPIReady()\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.video && prevProps.video !== this.props.video) {\n        this.setState({\n          video: this.props.video\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var video = this.state.video;\n\n      if (!video) {\n        return React.createElement(\"div\", {\n          style: {\n            \"width\": \"67.5%\",\n            \"background\": \"#999999\",\n            \"color\": \"#fff\",\n            \"height\": \"85vh\",\n            \"postion\": \"relative\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          style: {\n            \"top\": \"50%\",\n            \"left\": \"28%\",\n            \"position\": \"absolute\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"youtube\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        })));\n      }\n\n      var videoId = video.id.videoId;\n      var url = \"https://www.youtube.com/embed/\".concat(videoId);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"embed-responsive embed-responsive-16by9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: this.player,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, video.snippet.title), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, video.snippet.description)));\n    }\n  }]);\n\n  return VideoDetail;\n}(Component);\n\nexport default VideoDetail;","map":{"version":3,"sources":["/Users/teufiktutundzic/Desktop/lang-front/src/Components/VideoDetail.js"],"names":["React","Component","Icon","YTPlayer","VideoDetail","props","state","video","player","createRef","require","height","width","videoId","setState","onYouTubeIframeAPIReady","prevProps","id","url","snippet","title","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB;;IAEMC,W;;;;;AAKF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AADe,UAJnBC,KAImB,GAJX;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAIW;AAEf,UAAKA,MAAL,GAAcR,KAAK,CAACS,SAAN,EAAd;AAFe;AAGlB;;;;8CACyB;AACtB,UAAMN,QAAQ,GAAGO,OAAO,CAAC,WAAD,CAAxB;;AACA,aAAO,IAAIP,QAAJ,CAAa,KAAKK,MAAlB,EAA0B;AAC7BG,QAAAA,MAAM,EAAE,KADqB;AAE7BC,QAAAA,KAAK,EAAE,KAFsB;AAG7BC,QAAAA,OAAO,EAAE,aAHoB,CAI7B;AACA;AACA;AACA;;AAP6B,OAA1B,CAAP;AASH;;;wCAEmB;AAChB,WAAKC,QAAL,CAAc;AAACN,QAAAA,MAAM,EAAE,KAAKO,uBAAL;AAAT,OAAd;AACH;;;uCAEkBC,S,EAAW;AAC1B,UAAI,KAAKX,KAAL,CAAWE,KAAX,IAAsBS,SAAS,CAACT,KAAV,KAAoB,KAAKF,KAAL,CAAWE,KAAzD,EAAiE;AAC7D,aAAKO,QAAL,CAAc;AAACP,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAAnB,SAAd;AACH;AACJ;;;6BAGQ;AACL,UAAMA,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;;AAEA,UAAI,CAACA,KAAL,EAAY;AACR,eACI;AAAK,UAAA,KAAK,EAAE;AACR,qBAAS,OADD;AAER,0BAAc,SAFN;AAGR,qBAAS,MAHD;AAIR,sBAAU,MAJF;AAKR,uBAAW;AALH,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOI;AAAI,UAAA,KAAK,EAAE;AAAC,mBAAO,KAAR;AAAe,oBAAQ,KAAvB;AAA8B,wBAAY;AAA1C,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlE,CAPJ,CADJ;AAWH;;AAED,UAAMM,OAAO,GAAGN,KAAK,CAACU,EAAN,CAASJ,OAAzB;AACA,UAAMK,GAAG,2CAAqCL,OAArC,CAAT;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE,yCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAE,KAAKL,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,KAAK,CAACY,OAAN,CAAcC,KADnB,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKb,KAAK,CAACY,OAAN,CAAcE,WADnB,CAJJ,CALJ,CADJ;AAgBH;;;;EArEqBpB,S;;AAwE1B,eAAeG,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Icon} from \"antd\";\nimport YTPlayer from \"yt-player\";\n\nclass VideoDetail extends Component {\n    state = {\n        video: null,\n        player: null\n    };\n    constructor(props) {\n        super(props);\n        this.player = React.createRef();\n    }\n    onYouTubeIframeAPIReady() {\n        const YTPlayer = require('yt-player');\n        return new YTPlayer(this.player, {\n            height: '390',\n            width: '640',\n            videoId: 'M7lc1UVf-VE',\n            // events: {\n            //     'onReady': onPlayerReady,\n            //     'onStateChange': onPlayerStateChange\n            // }\n        });\n    }\n\n    componentDidMount() {\n        this.setState({player: this.onYouTubeIframeAPIReady()})\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.video && ( prevProps.video !== this.props.video)) {\n            this.setState({video: this.props.video});\n        }\n    }\n\n\n    render() {\n        const video = this.state.video;\n\n        if (!video) {\n            return (\n                <div style={{\n                    \"width\": \"67.5%\",\n                    \"background\": \"#999999\",\n                    \"color\": \"#fff\",\n                    \"height\": \"85vh\",\n                    \"postion\": \"relative\"\n                }}>\n                    <h1 style={{\"top\": \"50%\", \"left\": \"28%\", \"position\": \"absolute\"}}><Icon type={\"youtube\"}/></h1>\n                </div>\n            )\n        }\n\n        const videoId = video.id.videoId;\n        const url = `https://www.youtube.com/embed/${ videoId }`;\n\n        return (\n            <div>\n                <div className={\"embed-responsive embed-responsive-16by9\"}>\n                    <div ref={this.player} ></div>\n                    {/*<iframe title={video.snippet.title} className={\"embed-responsive-item\"} src={url} allowFullScreen/>*/}\n                </div>\n                <div>\n                    <h2>\n                        {video.snippet.title}\n                    </h2>\n                    <div>\n                        {video.snippet.description}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VideoDetail;\n\n"]},"metadata":{},"sourceType":"module"}