{"ast":null,"code":"import _regeneratorRuntime from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/teufiktutundzic/Desktop/lang-front/src/Components/Search.js\";\nimport React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport YTSearch from 'youtube-api-search';\nimport { Icon, notification } from 'antd';\nvar API_KEY = \"AIzaSyBIrrOQZ45NhLJX9UN8klnNrhyrlYX3QAk\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleInput = function (value) {\n      if (value === '') {\n        return;\n      }\n\n      var data = _this.videoSearch(value);\n\n      console.log(_this.props, data);\n\n      _this.props.getData(data);\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"videoSearch\",\n    value: function videoSearch(term) {\n      YTSearch({\n        key: API_KEY,\n        term: term,\n        part: \"contentDetails\"\n      },\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(data) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n\n                  if (!(data && data.data && data.data.error.message)) {\n                    _context.next = 3;\n                    break;\n                  }\n\n                  throw 'error';\n\n                case 3:\n                  console.log(data);\n                  return _context.abrupt(\"return\", {\n                    videos: data,\n                    selectedVideo: data[0]\n                  });\n\n                case 7:\n                  _context.prev = 7;\n                  _context.t0 = _context[\"catch\"](0);\n                  notification['error']({\n                    message: \"Daily Limit Exceeded\",\n                    description: \"Youtube data API daily limit have exceeded. Quota will be recharged at 1:30pm IST. Wait till then.\"\n                  });\n\n                case 10:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 7]]);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          \"display\": \"flex\",\n          \"flexDirection\": \"row\",\n          \"alignItems\": \"center\",\n          \"background\": \"#123456\",\n          \"paddingLeft\": \"30px\",\n          \"paddingRight\": \"30px\",\n          \"justifyContent\": \"space-between\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          \"color\": \"#fff\",\n          \"paddingTop\": \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Search \", React.createElement(Icon, {\n        type: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(SearchBar, {\n        onInput: this.handleInput,\n        style: {\n          \"width\": \"35%\",\n          \"display\": \"inline-flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/teufiktutundzic/Desktop/lang-front/src/Components/Search.js"],"names":["React","Component","SearchBar","YTSearch","Icon","notification","API_KEY","Search","handleInput","value","data","videoSearch","console","log","props","getData","term","key","part","error","message","videos","selectedVideo","description"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAAQC,IAAR,EAAcC,YAAd,QAAiC,MAAjC;AAGA,IAAMC,OAAO,GAAG,yCAAhB;;IAEMC,M;;;;;;;;;;;;;;;;;;UAmBFC,W,GAAc,UAACC,KAAD,EAAW;AACrB,UAAIA,KAAK,KAAK,EAAd,EAAkB;AACd;AACH;;AACD,UAAMC,IAAI,GAAG,MAAKC,WAAL,CAAiBF,KAAjB,CAAb;;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAjB,EAAwBJ,IAAxB;;AACA,YAAKI,KAAL,CAAWC,OAAX,CAAmBL,IAAnB;AACH,K;;;;;;;gCAxBWM,I,EAAM;AACdb,MAAAA,QAAQ,CAAC;AAACc,QAAAA,GAAG,EAAEX,OAAN;AAAeU,QAAAA,IAAI,EAAJA,IAAf;AAAqBE,QAAAA,IAAI,EAAE;AAA3B,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA+C,iBAAMR,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,wBAE3CA,IAAI,IAAIA,IAAI,CAACA,IAAb,IAAqBA,IAAI,CAACA,IAAL,CAAUS,KAAV,CAAgBC,OAFM;AAAA;AAAA;AAAA;;AAAA,wBAGpC,OAHoC;;AAAA;AAK/CR,kBAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAL+C,mDAMxC;AAACW,oBAAAA,MAAM,EAAEX,IAAT;AAAeY,oBAAAA,aAAa,EAAEZ,IAAI,CAAC,CAAD;AAAlC,mBANwC;;AAAA;AAAA;AAAA;AAQ/CL,kBAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsB;AAClBe,oBAAAA,OAAO,EAAE,sBADS;AAElBG,oBAAAA,WAAW,EAAE;AAFK,mBAAtB;;AAR+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/C;;AAAA;AAAA;AAAA;AAAA,UAAR;AAcH;;;6BAWQ;AACL,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAE;AACR,qBAAW,MADH;AAER,2BAAiB,KAFT;AAGR,wBAAc,QAHN;AAIR,wBAAc,SAJN;AAKR,yBAAe,MALP;AAMR,0BAAgB,MANR;AAOR,4BAAkB;AAPV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASI;AAAI,QAAA,KAAK,EAAE;AACP,mBAAS,MADF;AAEP,wBAAc;AAFP,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGU,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHV,CATJ,EAaI,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKf,WAAzB;AACW,QAAA,KAAK,EAAE;AACH,mBAAS,KADN;AAEH,qBAAW;AAFR,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,CADJ,CADJ;AAwBH;;;;EArDgBP,S;;AAwDrB,eAAeM,MAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport SearchBar from './SearchBar';\nimport YTSearch from 'youtube-api-search';\nimport {Icon, notification} from 'antd';\n\n\nconst API_KEY = \"AIzaSyBIrrOQZ45NhLJX9UN8klnNrhyrlYX3QAk\";\n\nclass Search extends Component {\n\n    videoSearch(term) {\n        YTSearch({key: API_KEY, term, part: \"contentDetails\"}, async(data) => {\n            try {\n                if (data && data.data && data.data.error.message) {\n                    throw ('error')\n                }\n                console.log(data)\n                return {videos: data, selectedVideo: data[0]}\n            } catch (err) {\n                notification['error']({\n                    message: \"Daily Limit Exceeded\",\n                    description: \"Youtube data API daily limit have exceeded. Quota will be recharged at 1:30pm IST. Wait till then.\",\n                })\n            }\n        });\n    }\n\n    handleInput = (value) => {\n        if (value === '') {\n            return;\n        }\n        const data = this.videoSearch(value);\n        console.log(this.props, data)\n        this.props.getData(data)\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{\n                    \"display\": \"flex\",\n                    \"flexDirection\": \"row\",\n                    \"alignItems\": \"center\",\n                    \"background\": \"#123456\",\n                    \"paddingLeft\": \"30px\",\n                    \"paddingRight\": \"30px\",\n                    \"justifyContent\": \"space-between\",\n                }}>\n                    <h1 style={{\n                        \"color\": \"#fff\",\n                        \"paddingTop\": \"20px\",\n                    }}>Search <Icon type={\"search\"}/></h1>\n                    <SearchBar onInput={this.handleInput}\n                               style={{\n                                   \"width\": \"35%\",\n                                   \"display\": \"inline-flex\",\n                               }}\n                    />\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}