{"ast":null,"code":"import _classCallCheck from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/teufiktutundzic/Desktop/lang-front/src/Components/VideoDetail.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { parse, toSeconds } from 'iso8601-duration';\nimport Slider from 'react-input-slider';\nimport { Icon } from \"antd\";\nimport ReactPlayer from 'react-player';\n\nvar VideoDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VideoDetail, _Component);\n\n  function VideoDetail(props) {\n    var _this;\n\n    _classCallCheck(this, VideoDetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VideoDetail).call(this, props)); // create a ref to store the textInput DOM element\n\n    _this.state = {\n      player: null,\n      videoDuration: null,\n      currentTime: 0\n    };\n    _this.ytPlayer = React.createRef();\n    _this.setWrapperRef = _this.setWrapperRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleEnter = _this.handleEnter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(VideoDetail, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (this.props.video && prevProps.video !== this.props.video) {\n        var ytUrl = \"https://www.googleapis.com/youtube/v3/videos?id=\".concat(this.props.video.id.videoId, \"&part=contentDetails&key=\").concat(this.props.ytKey);\n        axios.get(ytUrl).then(function (res) {\n          return _this2.setState({\n            videoDuration: toSeconds(parse(res.data.items[0].contentDetails.duration))\n          });\n        });\n      }\n\n      console.log(this.state.videoDuration);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('keypress', this.handleEnter());\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('keypress', this.handleEnter());\n    }\n  }, {\n    key: \"setWrapperRef\",\n    value: function setWrapperRef(node) {\n      this.wrapperRef = node;\n    }\n  }, {\n    key: \"inputQuestion\",\n    value: function inputQuestion() {\n      console.log(\"inputQuestion\");\n    }\n  }, {\n    key: \"handleEnter\",\n    value: function handleEnter(event) {\n      console.log(event);\n\n      if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n        alert('You pressed enter');\n      }\n    }\n  }, {\n    key: \"funk\",\n    value: function funk(event) {\n      console.log(event);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var video = this.props.video;\n\n      if (!video.id) {\n        return React.createElement(\"div\", {\n          style: {\n            \"width\": \"67.5%\",\n            \"background\": \"#999999\",\n            \"color\": \"#fff\",\n            \"height\": \"85vh\",\n            \"postion\": \"relative\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          style: {\n            \"top\": \"50%\",\n            \"left\": \"28%\",\n            \"position\": \"absolute\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"youtube\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        })));\n      }\n\n      var videoId = video.id.videoId;\n      var url = \"https://www.youtube.com/embed/\".concat(videoId);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: this.setWrapperRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.props.children), \";\", React.createElement(\"div\", {\n        className: \"embed-responsive embed-responsive-16by9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(ReactPlayer, {\n        controls: true,\n        url: url,\n        ref: this.ytPlayer,\n        onSeek: this.funk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.props.video.snippet.title), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.props.video.snippet.description)));\n    }\n  }]);\n\n  return VideoDetail;\n}(Component);\n\nexport default VideoDetail;","map":{"version":3,"sources":["/Users/teufiktutundzic/Desktop/lang-front/src/Components/VideoDetail.js"],"names":["React","Component","axios","parse","toSeconds","Slider","Icon","ReactPlayer","VideoDetail","props","state","player","videoDuration","currentTime","ytPlayer","createRef","setWrapperRef","bind","handleEnter","prevProps","video","ytUrl","id","videoId","ytKey","get","then","res","setState","data","items","contentDetails","duration","console","log","document","addEventListener","removeEventListener","node","wrapperRef","event","contains","target","alert","url","children","funk","snippet","title","description"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\nimport {parse, toSeconds} from 'iso8601-duration';\n\n\nimport Slider from 'react-input-slider';\nimport {Icon} from \"antd\";\nimport ReactPlayer from 'react-player'\n\n\nclass VideoDetail extends Component {\n    state = {\n        player: null,\n        videoDuration: null,\n        currentTime: 0\n    };\n\n    constructor(props) {\n        super(props);\n        // create a ref to store the textInput DOM element\n        this.ytPlayer = React.createRef();\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleEnter = this.handleEnter.bind(this);\n    }\n\n\n    componentDidUpdate(prevProps) {\n        if (this.props.video && ( prevProps.video !== this.props.video)) {\n\n            const ytUrl = `https://www.googleapis.com/youtube/v3/videos?id=${ this.props.video.id.videoId }&part=contentDetails&key=${ this.props.ytKey }`;\n            axios.get(ytUrl).then(res => this.setState({\n                videoDuration: toSeconds(parse(res.data.items[0].contentDetails.duration))\n            }))\n        }\n        console.log(this.state.videoDuration)\n    }\n\n    componentDidMount() {\n        document.addEventListener('keypress', this.handleEnter());\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keypress', this.handleEnter());\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    inputQuestion() {\n        console.log(\"inputQuestion\");\n    };\n\n    handleEnter(event) {\n        console.log(event);\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            alert('You pressed enter');\n        }\n    }\n    funk(event) {\n        console.log(event);\n    }\n\n    render() {\n        const video = this.props.video;\n\n        if (!video.id) {\n            return (\n                <div style={{\n                    \"width\": \"67.5%\",\n                    \"background\": \"#999999\",\n                    \"color\": \"#fff\",\n                    \"height\": \"85vh\",\n                    \"postion\": \"relative\"\n                }}>\n                    <h1 style={{\"top\": \"50%\", \"left\": \"28%\", \"position\": \"absolute\"}}><Icon type={\"youtube\"}/></h1>\n                </div>\n            )\n        }\n\n        const videoId = video.id.videoId;\n        const url = `https://www.youtube.com/embed/${ videoId }`;\n\n        return (\n            <div>\n                <div ref={this.setWrapperRef}>{this.props.children}</div>;\n                <div className={\"embed-responsive embed-responsive-16by9\"}>\n\n                    <ReactPlayer controls url={url} ref={this.ytPlayer} onSeek={this.funk}/>\n                    {/*<Slider*/}\n                        {/*styles={{*/}\n                            {/*width: '100px',*/}\n                            {/*track: {*/}\n                                {/*backgroundColor: 'grey'*/}\n                            {/*},*/}\n                            {/*active: {*/}\n                                {/*backgroundColor: 'red'*/}\n                            {/*},*/}\n                            {/*thumb: {*/}\n                                {/*width: 10,*/}\n                                {/*height: 10*/}\n                            {/*}*/}\n                        {/*}}*/}\n                        {/*axis=\"x\"*/}\n                        {/*xstep={0.01}*/}\n                        {/*xmin={0}*/}\n                        {/*xmax={this.state.videoDuration}*/}\n                        {/*x={this.state.currentTime}*/}\n                        {/*onDoubleClick={this.doubleClicked}*/}\n                        {/*onChange={({x}) => this.setState({currentTime: parseFloat(x.toFixed(2))})}*/}\n                    {/*/>*/}\n\n                    {/*<iframe title={video.snippet.title} className={\"embed-responsive-item\"} src={url} allowFullScreen/>*/}\n                </div>\n                <div>\n                    <h2>\n                        {this.props.video.snippet.title}\n                    </h2>\n                    <div>\n                        {this.props.video.snippet.description}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VideoDetail;\n\n"]},"metadata":{},"sourceType":"module"}