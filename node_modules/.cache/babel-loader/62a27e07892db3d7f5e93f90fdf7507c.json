{"ast":null,"code":"import _classCallCheck from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/teufiktutundzic/Desktop/lang-front/src/Components/SearchBar.js\";\nimport React, { Component } from 'react';\nimport { AutoComplete, Button, Icon } from 'antd';\nvar Option = AutoComplete.Option;\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBar, _Component);\n\n  function SearchBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      videos: []\n    };\n\n    _this.onSelect = function (value, index) {\n      var val = parseInt(index.key, 10);\n\n      _this.props.handleSearch(val);\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.video && prevProps.video !== this.props.video) {\n        this.setState({\n          videos: this.props.videos\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          \"textAlign\": \"center\",\n          \"background\": \"#123456\",\n          \"padding\": \"35px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          \"marginLeft\": \"5px\"\n        },\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SearchBar;\n}(Component);\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/teufiktutundzic/Desktop/lang-front/src/Components/SearchBar.js"],"names":["React","Component","AutoComplete","Button","Icon","Option","SearchBar","state","videos","onSelect","value","index","val","parseInt","key","props","handleSearch","prevProps","video","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAUC,YAAV,EAAwBC,MAAxB,EAAgCC,IAAhC,QAA4C,MAA5C;AACA,IAAMC,MAAM,GAAGH,YAAY,CAACG,MAA5B;;IACMC,S;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE;AADF,K;;UAURC,Q,GAAW,UAACC,KAAD,EAAQC,KAAR,EAAmB;AAC1B,UAAIC,GAAG,GAAGC,QAAQ,CAACF,KAAK,CAACG,GAAP,EAAY,EAAZ,CAAlB;;AACA,YAAKC,KAAL,CAAWC,YAAX,CAAyBJ,GAAzB;AACH,K;;;;;;;uCATmBK,S,EAAY;AAC9B,UAAI,KAAKF,KAAL,CAAWG,KAAX,IAAoBD,SAAS,CAACC,KAAV,KAAoB,KAAKH,KAAL,CAAWG,KAAvD,EAA+D;AAC3D,aAAKC,QAAL,CAAc;AAAEX,UAAAA,MAAM,EAAE,KAAKO,KAAL,CAAWP;AAArB,SAAd;AACH;AACF;;;6BAOQ;AACL,aACI;AAAK,QAAA,KAAK,EAAE;AAAE,uBAAa,QAAf;AAAyB,wBAAc,SAAvC;AAAkD,qBAAW;AAA7D,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAE,wBAAa;AAAf,SAAf;AAAuC,QAAA,IAAI,EAAE,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsD,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtD,CAVJ,CADJ;AAcH;;;;EAhCmBP,S;;AAmCxB,eAAeK,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport  { AutoComplete, Button, Icon } from 'antd';\nconst Option = AutoComplete.Option;\nclass SearchBar extends Component {\n\n    state = {\n      videos: []\n    };\n\n    componentDidUpdate( prevProps ) {\n      if( this.props.video && prevProps.video !== this.props.video ) {\n          this.setState({ videos: this.props.videos })\n      }\n    }\n\n    onSelect = (value, index ) => {\n        let val = parseInt(index.key, 10);\n        this.props.handleSearch( val );\n    };\n\n    render() {\n        return(\n            <div style={{ \"textAlign\": \"center\", \"background\": \"#123456\", \"padding\": \"35px\" }}>\n                {/*<AutoComplete*/}\n                    {/*size={\"large\"}*/}\n                    {/*style={{ width: 400 }}*/}\n                    {/*onSelect={ this.onSelect }*/}\n                    {/*onChange={ this.props.onChange }*/}\n                    {/*placeholder=\"Search Video\"*/}\n                {/*>*/}\n                    {/*{ this.state.videos.map((video, index)  => <Option key={ index } >{ video.snippet.title }</Option> ) }*/}\n                {/*</AutoComplete>*/}\n                <Button style={{ \"marginLeft\":\"5px\" }} size={\"large\"}><Icon type={\"search\"}/></Button>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}