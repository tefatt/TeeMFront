{"ast":null,"code":"import _objectWithoutProperties from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/teufiktutundzic/Desktop/lang-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/teufiktutundzic/Desktop/lang-front/src/Components/PresentedAnswers.js\";\nimport React, { Component } from 'react';\nimport { Table } from 'antd';\n\nvar PresentedAnswers =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PresentedAnswers, _React$Component);\n\n  function PresentedAnswers() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PresentedAnswers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PresentedAnswers)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      columns: [{\n        dataIndex: 'answerText',\n        key: 'answerText',\n        render: function render(text) {\n          return React.createElement(\"a\", {\n            href: \"javascript:;\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 11\n            },\n            __self: this\n          }, text);\n        }\n      }, {\n        dataIndex: 'isCorrect',\n        key: 'correctness'\n      }],\n      bordered: false,\n      loading: false,\n      pagination: true,\n      size: 'default',\n      expandedRowRender: expandedRowRender,\n      title: title,\n      showHeader: showHeader,\n      footer: footer,\n      rowSelection: {},\n      scroll: undefined\n    };\n    return _this;\n  }\n\n  _createClass(PresentedAnswers, [{\n    key: \"render\",\n    // rowSelection object indicates the need for row selection\n    value: function render() {\n      var _this$state = this.state,\n          columns = _this$state[\"columns\"],\n          state = _objectWithoutProperties(_this$state, [\"columns\"]); // const rowSelection = {\n      //         onChange: (selectedRowKeys, selectedRows) => {\n      //             console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n      //         },\n      //         getCheckboxProps: record => ({\n      //             disabled: record.name === 'Disabled User', // Column configuration not to be checked\n      //         }),\n      //     };\n\n\n      return React.createElement(Table, {\n        columns: columns,\n        dataSource: this.props.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return PresentedAnswers;\n}(React.Component);\n\nexport default PresentedAnswers;","map":{"version":3,"sources":["/Users/teufiktutundzic/Desktop/lang-front/src/Components/PresentedAnswers.js"],"names":["React","Component","Table","PresentedAnswers","state","columns","dataIndex","key","render","text","bordered","loading","pagination","size","expandedRowRender","title","showHeader","footer","rowSelection","scroll","undefined","props","data"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,QAAoB,MAApB;;IAEMC,gB;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,SAAS,EAAE,YADf;AAEIC,QAAAA,GAAG,EAAE,YAFT;AAGIC,QAAAA,MAAM,EAAE,gBAAAC,IAAI;AAAA,iBAAI;AAAG,YAAA,IAAI,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwBA,IAAxB,CAAJ;AAAA;AAHhB,OADK,EAML;AACIH,QAAAA,SAAS,EAAE,WADf;AAEIC,QAAAA,GAAG,EAAE;AAFT,OANK,CADL;AAYJG,MAAAA,QAAQ,EAAE,KAZN;AAaJC,MAAAA,OAAO,EAAE,KAbL;AAcJC,MAAAA,UAAU,EAAE,IAdR;AAeJC,MAAAA,IAAI,EAAE,SAfF;AAgBJC,MAAAA,iBAAiB,EAAjBA,iBAhBI;AAiBJC,MAAAA,KAAK,EAALA,KAjBI;AAkBJC,MAAAA,UAAU,EAAVA,UAlBI;AAmBJC,MAAAA,MAAM,EAANA,MAnBI;AAoBJC,MAAAA,YAAY,EAAE,EApBV;AAqBJC,MAAAA,MAAM,EAAEC;AArBJ,K;;;;;;AAyBZ;6BACa;AAAA,wBACmC,KAAKhB,KADxC;AAAA,UACcC,OADd,eACG,SADH;AAAA,UAC0BD,KAD1B,uDAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,aAAO,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAEC,OAAhB;AAAyB,QAAA,UAAU,EAAE,KAAKgB,KAAL,CAAWC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;EAxC0BtB,KAAK,CAACC,S;;AA2CrC,eAAeE,gBAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Table} from 'antd';\n\nclass PresentedAnswers extends React.Component {\n\n    state = {\n        columns: [\n            {\n                dataIndex: 'answerText',\n                key: 'answerText',\n                render: text => <a href=\"javascript:;\">{text}</a>,\n            },\n            {\n                dataIndex: 'isCorrect',\n                key: 'correctness',\n            }],\n\n        bordered: false,\n        loading: false,\n        pagination: true,\n        size: 'default',\n        expandedRowRender,\n        title,\n        showHeader,\n        footer,\n        rowSelection: {},\n        scroll: undefined,\n\n    };\n\n// rowSelection object indicates the need for row selection\n    render() {\n        const {[\"columns\"]:columns, ...state} = this.state;\n\n        // const rowSelection = {\n        //         onChange: (selectedRowKeys, selectedRows) => {\n        //             console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n        //         },\n        //         getCheckboxProps: record => ({\n        //             disabled: record.name === 'Disabled User', // Column configuration not to be checked\n        //         }),\n        //     };\n        return <Table columns={columns} dataSource={this.props.data}/>\n    }\n}\n\nexport default PresentedAnswers;"]},"metadata":{},"sourceType":"module"}